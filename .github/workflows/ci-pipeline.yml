name: Ephemeral Secret Sharer CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb_ci
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U testuser -d testdb_ci -h localhost"
          --health-interval 5s --health-timeout 5s --health-retries 10

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PostgreSQL client (for pg_isready)
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            ./backend/package-lock.json
            ./frontend/package-lock.json

      - name: Backend - Install Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Backend - Setup test environment
        working-directory: ./backend
        run: |
          echo "Creating test environment file..."
          echo "NODE_ENV=test" > .env.test
          echo "PORT=3001" >> .env.test
          echo "DATABASE_USER=testuser" >> .env.test
          echo "DATABASE_PASSWORD=testpassword" >> .env.test
          echo "DATABASE_HOST=localhost" >> .env.test
          echo "DATABASE_NAME=testdb_ci" >> .env.test
          echo "DATABASE_PORT=5432" >> .env.test
          echo "SECRET_KEY_CRYPTO=${{ secrets.TEST_SECRET_KEY_CRYPTO }}" >> .env.test
          echo "JWT_SECRET=${{ secrets.TEST_JWT_SECRET }}" >> .env.test

      - name: Backend - Lint Code
        working-directory: ./backend
        run: npm run lint

      - name: Backend - Run Tests
        working-directory: ./backend
        env:
          NODE_ENV: test
          SECRET_KEY_CRYPTO: ${{ secrets.TEST_SECRET_KEY_CRYPTO }}
          DATABASE_URL: 'postgresql://testuser:testpassword@localhost:5432/testdb_ci'
          JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
        run: |
          echo "Waiting for PostgreSQL service on localhost to be ready..."
          for i in {1..40}; do
            pg_isready -h localhost -p 5432 -U testuser -d testdb_ci && echo "PostgreSQL is ready!" && break
            echo "Waiting for PostgreSQL... ($i)"
            sleep 3
            if [ $i -eq 40 ]; then
              echo "PostgreSQL did not become ready on localhost. Exiting."
              exit 1
            fi
          done
          echo "Attempting to run backend tests..."
          npm test

      - name: Frontend - Install Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Frontend - Lint Code
        working-directory: ./frontend
        run: npm run lint

      - name: Frontend - Type Check
        working-directory: ./frontend
        run: npm run typecheck

      - name: Frontend - Build
        working-directory: ./frontend
        run: npm run build

      
      - name: Set up Docker Buildx
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags:
            ${{ secrets.DOCKERHUB_USERNAME }}/ephemeral-secret-backend:latest

      - name: Build and push Frontend Docker image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags:
            ${{ secrets.DOCKERHUB_USERNAME }}/ephemeral-secret-frontend:latest
